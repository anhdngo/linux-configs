colorscheme elflord

" Spaces & Tabs {{{
set tabstop=4       " number of visual spaces per TAB
set softtabstop=4   " number of spaces in tab when editing
set expandtab       " tabs are expanded to spaces
set smarttab        " auto indents
set shiftwidth=4    " stops smarttab from double-indenting
" }}}

" UI Config {{{
set number          " show line numbers
set showcmd         " show command in bottom bar
set cursorline      " underline current line
filetype indent on  " load filetype-specific indent files
set wildmenu        " visual autocomplete for command menu
set showmatch       " highlight matching [{(}}]
set ruler           " Show line number on bottom right of screen
" }}}

" Searching {{{
set incsearch       " search as characters are entered
set hlsearch        " highlight matches

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR> 
" }}}

" Folding {{{
set foldenable          " enable folding
set foldlevelstart=100    " close most folds by default
set foldmethod=syntax   " fold option

" space to toggle fold
nnoremap <space> za
" }}}

" Movement {{{

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" move to beginning or end of line
noremap B ^
noremap E $

" highlight last inserted text
nnoremap gV `[v`]

" jj to exit insert mode 
" inoremap jj <Esc>" binds jj to Esc  
" }}}

" Programming {{{
syntax enable       " enable syntax processing
set backspace=indent,eol,start  " Proper backspace behavior
" }}}

" Backups {{{
" move backups to tmp folder
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup
" }}}

" Leader Shortcuts {{{
" open ag.vim
nnoremap <leader>a :Ag
" }}}

" Fuzzy Finder{{{
" CtrlP
:let g:ctrlp_match_window = 'bottom,order:ttb'      " ctrlp lists files top to bottom
:let g:ctrlp_switch_buffer = 0                      " always open new buffer
:let g:ctrlp_working_path_mode = 0                  " allows working directory change
:let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""' " use ag to search
nnoremap <leader>s :CtrlP<CR>
nnoremap <C-p> :CtrlP<CR>
" }}}

" Pathogen {{{
call pathogen#infect()                      " use pathogen
" call pathogen#runtime_append_all_bundles()  " use pathogen
" }}}

" Vimwiki {{{
" vimwiki/vimwiki
set nocompatible
filetype plugin on
syntax on

let g:vimwiki_list = [{'path': '$VIMWIKI', 'syntax': 'markdown', 'ext': '.md'}]

" vimwiki will not affect files outside wikihome
let g:vimwiki_global_ext = 0

" let vimwiki use markdown style folding
let g:vimwiki_folding = 'custom'

" let g:vimwiki_ext2syntax = {'.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}

" vimwiki generate template
au BufNewFile $VIMWIKI/diary/*.md :silent 0r !$CONFIG/scripts/vimwiki-diary-template.py '%'
" }}}

" Plugins {{{

" lightline
set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ }

" smooth scroll
noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 0, 2)<CR>
noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 0, 2)<CR>
noremap <silent> <c-b> :call smooth_scroll#up(&scroll*2, 0, 4)<CR>
noremap <silent> <c-f> :call smooth_scroll#down(&scroll*2, 0, 4)<CR>

" }}}

" CUSTOM FUNCTIONS {{{

" Tmux
" allows cursor change in tmux mode
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Toggle Relative Number
function! ToggleNumber()
    if(&relativenumber == 1)
        set norelativenumber
        set number
    else
        set relativenumber
    endif
endfunc

" Ctrl+n to toggle numbers
nnoremap <C-n> :call ToggleNumber()<CR>
" }}}

" Clipboard {{{
set clipboard=unnamedplus
" }}}

set modeline
set modelines=1
" vim:foldmethod=marker:foldlevel=0
