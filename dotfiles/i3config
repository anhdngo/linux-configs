# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).

set $linux_configs $HOME/.linux_configs
set $browser $BROWSER
set $browser2 $BROWSER2
set $pictures $HOME/Pictures/assets

# BINDING STANDARDS:
# mod is used for manipulating windows within one workspace
# altmod is used for manipulating windows across workspaces
# control+mod is used for opening new applications
# control+altmod is used for moving windows between workspaces

# Modkeys {{{
# Set $alt to Mod1 (alt)
set $alt Mod1
# Set $win to Mod4 (windows key)
set $win Mod4

# Use Mouse+$alt to drag floating windows to their wanted position
floating_modifier $alt

# }}}

# {{{ Fonts
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8
# }}}

# Application Hotkeys {{{
bindsym $alt+Control+t exec i3-sensible-terminal
bindsym $alt+Control+Return exec zsh $linux_configs/assets/i3_shell.sh
bindsym $alt+Control+Shift+t exec i3-sensible-terminal -e tmux

bindsym $alt+Control+r exec calibre
bindsym $alt+Control+s exec spotify
bindsym $alt+Control+g exec /opt/$(ls /opt | grep Godot | head -n 1)

# q=quit -> kill window
bindsym Control+q kill
bindsym Control+BackSpace kill
bindsym $alt+Control+Backspace kill
# e=explorer -> open explorer
bindsym $alt+Control+e exec i3-sensible-terminal -e ranger
bindsym $alt+Control+Shift+e exec thunar

# start dmenu (a program launcher)
bindsym $alt+Control+space exec dmenu_run

# browser
bindsym $alt+Control+b exec $browser
bindsym $alt+Control+Shift+b exec $browser2
# }}}

# Focus Navigation {{{
# change focus
bindsym $alt+h focus left
bindsym $alt+j focus down
bindsym $alt+k focus up
bindsym $alt+l focus right

# alternatively, you can use the cursor keys:
bindsym $alt+Left focus left
bindsym $alt+Down focus down
bindsym $alt+Up focus up
bindsym $alt+Right focus right

# enable alt+tab to change focus
bindsym $alt+Tab focus right
bindsym $alt+Shift+Tab focus left

# move focused window
bindsym $alt+Shift+h move left
bindsym $alt+Shift+j move down
bindsym $alt+Shift+k move up
bindsym $alt+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $alt+Shift+Left move left
bindsym $alt+Shift+Down move down
bindsym $alt+Shift+Up move up
bindsym $alt+Shift+Right move right

# toggle fullscreen for focused window
bindsym $win+k fullscreen toggle
bindsym $win+Up fullscreen toggle
bindsym $alt+f fullscreen toggle
# toggle floating mode for focused window
bindsym $win+j floating toggle
bindsym $win+Down floating toggle
bindsym $alt+Shift+space floating toggle

# split in vertical orientation
bindsym $alt+Control+Up split v
bindsym $alt+Control+Down split v
# split in horizontal orientation
bindsym $alt+Control+Left split h
bindsym $alt+Control+Right split h
# toggle split orientation
bindsym $alt+v split toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $alt+s layout stacking
bindsym $alt+w layout tabbed
bindsym $alt+e layout toggle split
bindsym $alt+q layout toggle all

# change focus between tiling / floating windows
bindsym $alt+space focus mode_toggle

# focus the parent container
bindsym $alt+a focus parent

# focus the child container
#bindsym $alt+d focus child
# }}}

# Mouse Navigation {{{

mode "mouse" {

	# set your three speeds here

	set $slow 10
	set $quick 100
	set $fast 500

	# Mouse movement (slow/fine-tuned) -- vim keybindings

	bindsym h exec xdotool mousemove_relative -- -$slow 0
	bindsym j exec xdotool mousemove_relative 0 $slow
	bindsym k exec xdotool mousemove_relative -- 0 -$slow
	bindsym l exec xdotool mousemove_relative $slow 0

	# Mouse movement (slow/fine-tuned) -- arrow keys

	bindsym Left exec xdotool mousemove_relative -- -$slow 0
	bindsym Down exec xdotool mousemove_relative 0 $slow
	bindsym Up exec xdotool mousemove_relative -- 0 -$slow
	bindsym Right exec xdotool mousemove_relative $slow 0

	# Mouse movement (quicker) -- vim keybindings

	bindsym Shift+h exec xdotool mousemove_relative -- -$quick 0
	bindsym Shift+j exec xdotool mousemove_relative 0 $quick
	bindsym Shift+k exec xdotool mousemove_relative -- 0 -$quick
	bindsym Shift+l exec xdotool mousemove_relative $quick 0

	# Mouse movement (quicker) -- arrow keys

	bindsym Shift+Left exec xdotool mousemove_relative -- -$quick 0
	bindsym Shift+Down exec xdotool mousemove_relative 0 $quick
	bindsym Shift+Up exec xdotool mousemove_relative -- 0 -$quick
	bindsym Shift+Right exec xdotool mousemove_relative $quick 0

	# Mouse movement (fast) -- vim keybindings

	bindsym Shift+$alt+h exec xdotool mousemove_relative -- -$fast 0
	bindsym Shift+$alt+j exec xdotool mousemove_relative 0 $fast
	bindsym Shift+$alt+k exec xdotool mousemove_relative -- 0 -$fast
	bindsym Shift+$alt+l exec xdotool mousemove_relative $fast 0

	# Mouse movement (fast) -- arrow keys

	bindsym Shift+$alt+Left exec xdotool mousemove_relative -- -$fast 0
	bindsym Shift+$alt+Down exec xdotool mousemove_relative 0 $fast
	bindsym Shift+$alt+Up exec xdotool mousemove_relative -- 0 -$fast
	bindsym Shift+$alt+Right exec xdotool mousemove_relative $fast 0

	# Left Click
	bindsym f exec xdotool click 1

	# Right Click
	bindsym d exec xdotool click 3

	# Middle Click
	bindsym s exec xdotool click 2

	# Left Click-and-drag
	bindsym Shift+f exec xdotool mousedown 1

	# Right Click-and-drag 
	bindsym Shift+d exec xdotool mousedown 3

	# Middle Click-and-drag
	bindsym Shift+s exec xdotool mousedown 2

	# Left Drag release
	bindsym $alt+f exec xdotool mouseup 1

	# Right Drag release
	bindsym $alt+d exec xdotool mouseup 3

	# Middle Drag release
	bindsym $alt+s exec xdotool mouseup 2

	# return to normal keybindings -- IMPORTANT!!

	bindsym Escape mode "default"
	bindsym q mode "default"
}

bindsym $alt+m mode "mouse"

# }}}

# Workspace Navigation{{{
# set workspace names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $win+1 workspace $ws1
bindsym $win+2 workspace $ws2
bindsym $win+3 workspace $ws3
bindsym $win+4 workspace $ws4
bindsym $win+5 workspace $ws5
bindsym $win+6 workspace $ws6
bindsym $win+7 workspace $ws7
bindsym $win+8 workspace $ws8
bindsym $win+9 workspace $ws9
bindsym $win+0 workspace $ws10

# switch workspace using left and right
bindsym $win+Left workspace prev
bindsym $win+Right workspace next
bindsym $win+h workspace prev
bindsym $win+l workspace next

# enable alt+tab to change focus
bindsym $win+Tab workspace next
bindsym $win+Shift+Tab workspace prev

# move focused container to workspace
bindsym $win+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $win+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $win+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $win+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $win+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $win+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $win+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $win+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $win+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $win+Shift+0 move container to workspace $ws10; workspace $ws10

# move focused container to next/prev workspace
bindsym $win+Shift+Left move container to workspace prev; workspace prev
bindsym $win+Shift+Right move container to workspace next; workspace next
bindsym $win+Shift+h move container to workspace prev; workspace prev
bindsym $win+Shift+l move container to workspace next; workspace next
# }}}

# Reload i3{{{
# reload the configuration file
bindsym $alt+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $alt+Shift+r restart
# }}}

# X Session/System Mode {{{
# exit i3 (logs you out of your X session)
bindsym $alt+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# mode to suspend/shutdown computer
# set $Locker i3lock -i $linux_configs/wallpapers/wallpaper.png && sleep 1
#set $Locker $linux_configs/assets/lock.sh
set $Locker $HOME/.linux_configs/assets/lock.sh

set $mode_system "System (l) lock, (e) logout, (s) suspend, (t) troll suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown"
mode $mode_system {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # troll mode
    bindsym t exec --no-startup-id i3lock -p win -i $(find $pictures/windows -name "*.png" | shuf -n1), mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $alt+Control+Escape mode $mode_system
bindsym $alt+Control+Delete mode $mode_system

# }}}

# Resize Mode {{{
# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $alt+r mode "resize"
# }}}

# i3 Bar {{{ 
bar {
    # hide bar and reveal when win key is pressed
    mode hide
    hidden_state hide
    modifier $win
    # show status
    status_command $linux_configs/bumblebee-status/bumblebee-status -m battery date time pasink pasource -p root.path=/ time.format="%I:%M %p" date.format="%a, %b %d %Y" nic.exclude="ham0,docker0,lo" -t greyish-powerline
    # fonts
    font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
    font pango:DejaVu Sans Mono 8
}

bindsym $win+b bar mode hide; bar hidden_state hide
bindsym $win+Shift+b bar mode dock; bar hidden_state show
# }}}

# Hardware Buttons Control {{{
# Volume Control (requires pulseaudio and alsa-utils)
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl -- set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl -- set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Screen Brightness Controls (requires xbacklight)
bindsym XF86MonBrightnessUp exec xbacklight -inc 20
bindsym XF86MonBrightnessDown exec xbacklight -dec 20

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
# }}}

# Screenshot {{{
# Takes screenshot with scrot, then uses xclip to save that to clipboard
bindsym --release $alt+p exec scrot -u -e 'xclip -selection c -t image/png < $f'
bindsym --release $alt+Shift+p exec scrot -s -e 'xclip -selection c -t image/png < $f'
bindsym --release $alt+$win+p exec scrot -e 'xclip -selection c -t image/png < $f'
# }}}

# Default Workspaces {{{
# Assign apps to default workspaces
# Use xprop to get class
#assign [class="class"] $ws#
#for_window [class="class"] move to workspace $ws#
# }}}

# Wallpaper and Compositing {{{
# Desktop Wallpaper
exec_always feh --bg-scale --randomize $pictures/wallpapers/*

# Compton: Xorg compositor 
exec compton

# Set Grayscale
# exec compton --backend glx --glx-fshader-win "$(cat $linux_configs/grayscale.glsl)"

# i3-gaps
gaps inner 4
gaps outer 2
for_window [class="^.*"] border pixel 2
# }}}

exec --no-startup-id nm-applet
exec --no-startup-id /opt/pcloud
exec --no-startup-id /opt/syncthing

# vim:foldmethod=marker:foldlevel=0
